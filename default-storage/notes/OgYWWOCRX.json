{"_id":"note:OgYWWOCRX","title":"单例","content":"## 类方法实现\n```python\nclass ClassRoom:\n    \n    __registry_classrooms__ = {}\n    \n    def __init__(self, id):\n        self.id = id\n    \n    @classmethod\n    def new(cls, id):\n        if id not in cls.__registry_classrooms__:\n            cls.__registry_classrooms__[id] = super().__new__(cls)\n        return cls.__registry_classrooms__[id]\n    \nif __name__ == \"__main__\":\n    class11 = ClassRoom.new(1)\n    class12 = ClassRoom.new(1)\n    class13 = ClassRoom.new(1)\n    \n    print(ClassRoom.__registry_classrooms__)\n    \n    print(id(class11))\n    print(id(class12))\n    print(id(class13))\n    \n```\n\n## `__new__`方法实现\n```python\nclass ClassRoom:\n\n    __registry_obj__ = {}\n\n    def __new__(cls, id):\n        if id not in cls.__registry_obj__:\n            cls.__registry_obj__[id] = super().__new__(cls)\n        return cls.__registry_obj__[id]\n\n    def __init__(self, id):\n        self.id = id\n\nif __name__ == \"__main__\":\n    class11 = ClassRoom(1)\n    class12 = ClassRoom(1)\n    class13 = ClassRoom(1)\n    class14 = ClassRoom(1)\n    class15 = ClassRoom(1)\n    class21 = ClassRoom(2)\n\n    print(ClassRoom.__registry_obj__)\n\n    print(id(class11))\n    print(id(class12))\n    print(id(class13))\n    print(id(class14))\n    print(id(class15))\n\n    print(id(class21))\n```\n\n## 元类实现\n```python\nclass Singleton(type):\n\n    def __init__(self, clsname, clsbases, clsdict) -> None:\n        self.__registry_classrooms__ = {}\n\n    def __call__(self, id):\n        if id not in self.__registry_classrooms__:\n            self.__registry_classrooms__[id] = object.__new__(self)\n            self.__init__(self.__registry_classrooms__[id], id)\n        return self.__registry_classrooms__[id]\n\n\nclass ClassRoom(metaclass=Singleton):\n\n    def __init__(self, id) -> None:\n        self.id = id\n\n\nif __name__ == \"__main__\":\n    class11 = ClassRoom(1)\n    class12 = ClassRoom(1)\n    class21 = ClassRoom(2)\n\n    print(id(class11))\n    print(id(class12))\n    print(id(class21))\n\n    print(class11 is class12 is class21)\n```\n","tags":[],"folderPathname":"/Python/设计模式/构造模式","data":{},"createdAt":"2020-11-25T07:08:38.665Z","updatedAt":"2020-11-26T12:54:39.953Z","trashed":false,"_rev":"4bwkj_pDw"}