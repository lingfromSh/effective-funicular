{"_id":"note:Bk9LYjekZ","title":"图像增强-图像去噪","content":"# 图像增强- 图像去噪 (Image Denoise)\n\n## 作用\n\n尽可能的保持原始信息完整性（即主要特征）的同时，又能够去除信号中无用的信息。\n\n通常微小细节的去噪对于后续处理影响不大。但是在医学影像中，微小细节的丢失可能会造成误判，所以研究丢失细节小去噪效果好的算法依旧是有必要的。\n\n## 分类\n\n大致分为两类, 空间域和变化域方法\n    \n### 空域像素特征去噪算法 \n\n通常针对随机噪声。随机噪声是一种或高或低呈现出不确定变化的一种信号，所有随机噪声求和结果是0。\n\n由于零和特征，几乎所有的空间域去噪算法都是建立在这个理论上的。\n\n基于空间域的算法是通过分析一定窗口内，中心像素和其他相邻像素之间在色彩空间的直接联系，来获取中心像素值的方法。\n\n因此，这类算法通常需要一个**半径`r`**, 可能是由图像中局部窗口大小像素的相似性决定也可能是一些高斯或拉普拉斯算子。\n\n\n#### 算术均值滤波(线性滤波)\n\n算术均值滤波用像素邻域的平均灰度来代替像素值，适用于脉冲噪声，因为脉冲噪声的灰度级一般与周围像素的灰度级不相关，而且亮度高出其他像素许多。\n\n所以不用于处理我们生活中的一般噪声图像。\n\n噪声随着半径的增大，逐渐被均分到其他像素中，但同时噪声影响到的面积也被扩大。所以通常需要通过统计分析图像噪声的特征，选取阈值来决定这个噪声是否应该去除。\n\n代码示例:\n\n```python\nimport cv2 as cv\n\nEXIT_KEY = 27\n\n\ndef mean_blur(image_path):\n    # Read image data\n    image = cv.imread(image_path)\n\n    # Blur image\n    kernel = (4, 4)\n    blur_image = cv.blur(image, ksize=kernel)\n\n    cv.imshow(\"Original\", image)\n    cv.imshow(\"Blur\", blur_image)\n\n    # Wait for exit\n    key = cv.waitKey(0)\n    if key == EXIT_KEY:\n        pass\n```\n\n![效果](/home/ling/BoostNote/images/mean-blur.png)\n\n#### 中值滤波(非线性滤波)\n\n对于椒盐噪声效果显著, 因为是和邻域像素比较得到的结果.\n\n```python\nimport cv2 as cv\n\nEXIT_KEY = 27\n\n\ndef median_blur(image_path):\n    # Read image data\n    image = cv.imread(image_path)\n\n    # Blur image\n    kernel = 5\n    blur_image = cv.medianBlur(src=image, ksize=kernel)\n\n    cv.imshow(\"Original\", image)\n    cv.imshow(\"Blur\", blur_image)\n\n    # Wait for exit\n    key = cv.waitKey(0)\n    if key == EXIT_KEY:\n        pass\n\n```\n\n![效果](/home/ling/BoostNote/images/median-blur.png)\n\n![效果](/home/ling/BoostNote/images/median-blur-sample-2.png)\n\n\n#### 双边滤波(非线性滤波)\n\n```python\nimport cv2 as cv\n\nEXIT_KEY = 27\n\n\ndef bilateral_blur(image_path):\n    # Read image data\n    image = cv.imread(image_path)\n\n    # Blur image\n    blur_image = cv.bilateralFilter(image, 9, 75, 75)\n\n    cv.imshow(\"Original\", image)\n    cv.imshow(\"Blur\", blur_image)\n\n    # Wait for exit\n    key = cv.waitKey(0)\n    if key == EXIT_KEY:\n        pass\n\n```\n\n![效果](/home/ling/BoostNote/images/bilateral-blur.png)\n\n\n### 变化域特征去噪算法\n\n#### 高斯滤波(线性滤波)\n\n```python\nimport cv2 as cv\n\nEXIT_KEY = 27\n\n\ndef gaussian_blur(image_path):\n    # Read image data\n    image = cv.imread(image_path)\n\n    # Blur image\n    kernel = (5, 5)\n    blur_image = cv.GaussianBlur(image, kernel, 0)\n\n    cv.imshow(\"Original\", image)\n    cv.imshow(\"Blur\", blur_image)\n\n    # Wait for exit\n    key = cv.waitKey(0)\n    if key == EXIT_KEY:\n        pass\n\n```\n\n![效果](/home/ling/BoostNote/images/gaussian-blur.png)\n","tags":[],"folderPathname":"/图像处理","data":{},"createdAt":"2020-11-29T05:48:13.859Z","updatedAt":"2020-12-03T18:04:41.484Z","trashed":false,"_rev":"-a6HG2I2_"}