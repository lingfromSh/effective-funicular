{"_id":"note:HAVMu9oW1","title":"原生Websocket 实现即时聊天","content":"# 原生Websocket实现即时聊天\n\n因为项目需求，需要适用websocket构建长链接完成即时通讯和站内信通知的功能。\n\n## websocket实现\n\n### websocket server\n```python\nimport websockets\nimport asyncio\nimport ujson\n\n\nasync def recv_connect(websocket):\n    await websocket.send(\"Connected\")\n\n\nasync def recv_disconnect(websocket):\n    await websocket.send(\"Disconnected\")\n\n\n# 接收客户端消息并处理，这里只是简单把客户端发来的返回回去\nasync def recv_msg(websocket):\n    while True:\n        recv_text = await websocket.recv()\n        response_text = f\"your submit context: {recv_text}\"\n        await websocket.send(response_text)\n\n\n# 服务器端主逻辑\n# websocket和path是该函数被回调时自动传过来的，不需要自己传\nasync def main_logic(websocket, path):\n    try:\n        await recv_connect(websocket)\n        await recv_msg(websocket)\n    except Exception as err:\n        # shutdown connection\n        print(err)\n\n\nstart_server = websockets.serve(main_logic, '127.0.0.1', 8080)\nasyncio.get_event_loop().run_until_complete(start_server)\nasyncio.get_event_loop().run_forever()\n```\n\n\n### websocket client\n```html\n<html>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.3/socket.io.js\"></script>\n\n<body>\n    <div id=\"im-displayer\">\n    </div>\n    <input id=\"input\" type=\"text\" />\n    <button id=\"send-btn\" onclick=\"javascript:sendMessage()\">\n        发送\n    </button>\n</body>\n<script>\n    function renderMessage(message) {\n        const displayer = document.getElementById(\"im-displayer\");\n        displayer.innerHTML = displayer.innerHTML + \"<p>\" + message + \"</p>\";\n    };\n</script>\n<script>\n    const websocket = new WebSocket(\"ws://localhost:8080\");\n\n    // 监听消息\n    websocket.addEventListener('message', function (event) {\n        console.log('Message from server ', event.data);\n        renderMessage(event.data);\n    });\n\n    // 断开\n    websocket.addEventListener('error', function (event) {\n        console.log('WebSocket error: ', event);\n        websocket.close();\n    });\n\n    // 连接\n    websocket.addEventListener('open', function (event) {\n        console.log(\"Websocket Connected \", event.data);\n        renderMessage(\"Connected\");\n    })\n\n    function sendMessage() {\n        console.log(\"Sending\");\n        const input = document.getElementById(\"input\");\n        websocket.send(input.value);\n    }\n</script>\n\n</html>\n```\n\n## 效果\n![浏览器+wscat](/home/ling/BoostNote/images/websocket-im.png)\n\n\n## Socket.io 框架\n\nSocket.IO is a library that enables real-time, bidirectional and event-based communication between the browser and the server.\n\n有server,client.还有多种语言client版本的社区实现。\n\n\n## 展望\n\n希望写一个websocket框架，实现自己的server, client。","tags":[],"folderPathname":"/开发","data":{},"createdAt":"2020-12-03T11:58:00.810Z","updatedAt":"2020-12-06T07:20:06.213Z","trashed":false,"_rev":"AV4w-R68e"}